<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<bean id="mainDataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost/fang?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;connectTimeout=11000&amp;socketTimeout=5000" />
		<property name="username" value="root" />
		<property name="password" value="root123456" />
		<property name="connectionTimeoutInMs" value="3000" />
		<property name="maxConnectionAge" value="0" />
		<property name="idleMaxAge" value="240" />
		<property name="idleConnectionTestPeriod" value="60" />
		<property name="partitionCount" value="3" />
		<property name="maxConnectionsPerPartition" value="30" />
		<property name="minConnectionsPerPartition" value="10" />
		<property name="acquireIncrement" value="5" />
		<property name="poolAvailabilityThreshold" value="20" />
		<property name="statementsCacheSize" value="100" />
		<property name="statementReleaseHelperThreads" value="5" />
		<property name="releaseHelperThreads" value="3" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
		<property name="dataSource" ref="mainDataSource" />
	</bean>
	<bean id="billDAO" class="org.springlearning.aop.beanNameAutoProxyCreator.BillDAOImpl"> 
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	<bean id="billDAO2" class="org.springlearning.aop.beanNameAutoProxyCreator.BillDAOImpl2"> 
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	<bean id="billService" class="org.springlearning.aop.beanNameAutoProxyCreator.BillServiceImpl"> 
		<property name="billDAO" ref="billDAO" />
		<property name="billDAO2" ref="billDAO2" />
	</bean>
	
	<!-- 配置事务管理器，注意这里的dataSource和jdbcTemplate的dataSource要一致，不然事务就没有作用了 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mainDataSource" />
	</bean>

	<bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
		<property name="transactionInterceptor" ref="transInterceptor" />
	</bean>

    <!-- DefaultAdvisorAutoProxyCreator搜索容器中的 advisor,并为每个bean创建代理 
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>  
 	--> 
	<bean id="zwAutoProxyCreator" 
			class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<!-- 此处 是bean的Name，而非class的Name! -->
		<property name="beanNames">
			<value>*Service</value>
		</property>
		<!-- 
		<property name="beanNames">
			<list>
				<idref bean="zwDao" />
			</list>
		</property>
		 -->
		<property name="interceptorNames">
			<list>
				<idref bean="transInterceptor" />
			</list>
		</property>
	</bean>
	
	<bean id="transInterceptor" 
			class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<!-- 可以指定一个TransactionAttributeSource -->
		<property name="transactionAttributeSource">
			<ref bean="nameMatchTAS" />
		</property>
		<!-- 也可以直接使用transactionAttributes属性设置相关值，其实Spring内部还是
		会创建NameMatchTransactionAttributeSource，并把相关值设置给这个NameMatchTransactionAttributeSource
		<property name="transactionAttributes">  
            <props>  
                <prop key="insert*">PROPAGATION_REQUIRED,ISOLATION_READ_COMMITTED</prop>  
                <prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>  
                <prop key="*">PROPAGATION_REQUIRED</prop>  
            </props>  
        </property>
        --> 
	</bean>

	<bean id="nameMatchTAS"
			class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
		<!--  (设定事务的策略)-->
		<property name="properties">
			<props>
			    <!-- (根据方法名字监控key方法这里是saveBill,也可以是insert*等) -->
				<prop key="saveBill">PROPAGATION_REQUIRED,-Exception</prop>
			</props>
		</property>
	</bean>
	
</beans>